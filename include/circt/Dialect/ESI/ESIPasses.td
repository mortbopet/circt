//===-- ESIPasses.td - ESI pass definition file ------------*- tablegen -*-===//
//
//
// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
// See https://llvm.org/LICENSE.txt for license information.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
//
//===----------------------------------------------------------------------===//
//
// This file contains definitions for passes that work on the ESI dialect.
//
//===----------------------------------------------------------------------===//

#ifndef CIRCT_DIALECT_ESI_ESIPASSES_TD
#define CIRCT_DIALECT_ESI_ESIPASSES_TD

include "mlir/Pass/PassBase.td"

def LowerESIToPhysical: Pass<"lower-esi-to-physical", "mlir::ModuleOp"> {
  let summary = "Lower ESI abstract Ops to ESI physical ops.";
  let constructor = "circt::esi::createESIPhysicalLoweringPass()";
}

def LowerESIPorts: Pass<"lower-esi-ports", "mlir::ModuleOp"> {
  let summary = "Lower ESI input and/or output ports.";
  let constructor = "circt::esi::createESIPortLoweringPass()";
  let dependentDialects = ["circt::comb::CombDialect", "circt::sv::SVDialect"];
}

def LowerESItoHW: Pass<"lower-esi-to-hw", "mlir::ModuleOp"> {
  let summary = "Lower ESI to HW where possible and SV elsewhere.";
  let constructor = "circt::esi::createESItoHWPass()";
  let dependentDialects = ["circt::comb::CombDialect", "circt::hw::HWDialect"];
}

def CreateESIWrapper: Pass<"create-esi-wrapper", "mlir::ModuleOp"> {
  let summary = "Creates an ESI wrapper from a supported hardware-like module.";
  let constructor = "circt::esi::createESIWrapperPass()";
  let dependentDialects = ["circt::comb::CombDialect", "circt::hw::HWDialect",
    "circt::seq::SeqDialect", "circt::esi::ESIDialect", "circt::sv::SVDialect"];
  
  let options = [
    Option<"topOpt", "top", "std::string", "", "top-level function to wrap">,
    Option<"inputBufferSizeOpt", "input-buffer-size", "unsigned",
      "1", "Size of input buffers">,
    Option<"outputBufferSizeOpt", "output-buffer-size", "unsigned",
      "1", "Size of output buffers">
  ];
}

#endif // CIRCT_DIALECT_ESI_ESIPASSES_TD
